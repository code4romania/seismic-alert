name: API Pipeline

on:
  push:
    branches:
      - '*'
      - 'main'
    paths:
      - 'api/**.py'
      - 'api/requirements*.*'
      - 'docker/dockerfiles/Dockerfile.backend*'
      - 'docker-compose.yml'
      - '.github/workflows/api_pipeline.yml'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'api/**.py'
      - 'api/requirements*.*'
      - 'docker/dockerfiles/Dockerfile.backend*'
      - 'docker-compose.yml'
      - '.github/workflows/api_pipeline.yml'

jobs:

  formatting_with_black:
    name: Run Black formatting check
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'

      - name: Install Black with latest pip
        run: |
          cat ./api/requirements-dev.txt | grep black== | cut -d' ' -f1 | xargs pip install

      - name: Check formatting with Black
        run: |
          black --check ./api

  linting_with_ruff:
    name: Run Ruff linting check
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'

      - name: Install Black & Ruff with latest pip
        run: |
          cat ./api/requirements-dev.txt | grep ruff== | cut -d' ' -f1 | xargs pip install

      - name: Lint files using Ruff
        run: |
          ruff check ./api

  checking_migrations:
    name: Check for migrations
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r ./api/requirements-dev.txt

      - name: Check for migrations
        run: |
          set -a
          . ./.env.example.dev
          python ./api/manage.py makemigrations --check --dry-run
          set +a

  tests:
    name: Run api tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./api/requirements-dev.txt

    - name: Run tests
      run: |
        ENVIRONMENT=test DJANGO_SETTINGS_MODULE=seismic_site.settings.test ./api/manage.py test
